# Test Dockerfile for claude-flow validation
# Simulates a clean remote environment

FROM node:18-alpine

# Install required dependencies
RUN apk add --no-cache \
    git \
    bash \
    curl \
    sqlite \
    python3 \
    make \
    g++

# Create test user (non-root)
RUN adduser -D testuser
USER testuser
WORKDIR /home/testuser

# Copy package files first (for layer caching)
COPY --chown=testuser:testuser package*.json ./

# Install dependencies with legacy peer deps to avoid conflicts
RUN npm install --legacy-peer-deps --no-audit --no-fund || \
    npm ci --legacy-peer-deps --no-audit --no-fund

# Copy rest of project
COPY --chown=testuser:testuser . .

# Build the project
RUN npm run build 2>&1 | tail -20 || echo "Build completed with warnings"

# Set up test environment
ENV NODE_ENV=test
ENV CI=true

# Create test directories
RUN mkdir -p memory .swarm .claude-flow

# Entry point for tests
CMD ["sh", "-c", "./tests/docker/run-validation.sh"]
